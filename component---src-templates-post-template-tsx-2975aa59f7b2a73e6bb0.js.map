{"version":3,"file":"component---src-templates-post-template-tsx-2975aa59f7b2a73e6bb0.js","mappings":"mNASA,IAAMA,GAAe,+LAWfC,GAAK,wIASLC,GAAI,uHAsBV,EAdmD,YAI/C,IAHFC,EAGC,EAHDA,MACAC,EAEC,EAFDA,KACAC,EACC,EADDA,KAEA,OACEC,EAAAA,EAAAA,IAACN,EAAD,MACEM,EAAAA,EAAAA,IAACL,EAAD,KAAQE,IACRG,EAAAA,EAAAA,IAACJ,EAAD,KAAOG,EAAKE,KAAK,SACjBD,EAAAA,EAAAA,IAAAA,MAAAA,KAAMF,KCvCZ,IAAMI,GAAkB,84BAyHxB,EAJyD,YAAqB,IAATC,EAAQ,EAARA,KACnE,OAAOH,EAAAA,EAAAA,IAACE,EAAD,CAAoBE,wBAAyB,CAAEC,OAAQF,MCzFhE,IAAMG,GAAY,+HA0ClB,EAjC2D,YAQvD,IAAD,IAPDC,KAE2BC,EAK1B,EANCC,KACEC,aAAgBb,MAEGc,EAGtB,EAHCC,kBAAqBD,MAEXE,EACX,EADDC,SAAYD,KAEZ,EAKIF,EAAM,GAJRI,KACEZ,EAFJ,EAEIA,KAFJ,IAGIa,YAAenB,EAHnB,EAGmBA,MAAOoB,EAH1B,EAG0BA,QAASnB,EAHnC,EAGmCA,KAAMC,EAHzC,EAGyCA,KAIzC,OACEC,EAAAA,EAAAA,IAACkB,EAAAA,EAAD,CACER,aAAc,CACZb,MAAOW,EACPW,YAAaF,EACbG,QAASP,GAEXhB,MAAOA,IAEPG,EAAAA,EAAAA,IAACM,EAAD,MACEN,EAAAA,EAAAA,IAACqB,EAAD,CAAUxB,MAAOA,EAAOC,KAAMA,EAAMC,KAAMA,KAC1CC,EAAAA,EAAAA,IAACsB,EAAD,CAAanB,KAAMA","sources":["webpack://gatsby-starter-default/./src/components/Post/PostHead.tsx","webpack://gatsby-starter-default/./src/components/Post/PostContent.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\n\ntype PostHeadProps = {\n  title: string\n  date: string\n  tags: string[]\n}\n\nconst PostHeadWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 20px 0;\n  border-bottom: 1px solid lightgray;\n\n  @media (max-width: 768px) {\n    padding: 10px 20px;\n  }\n`\n\nconst Title = styled.div`\n  font-size: 40px;\n  font-weight: 600;\n\n  @media (max-width: 768px) {\n    font-size: 28px;\n  }\n`\n\nconst Tags = styled.div`\n  font-size: 18px;\n\n  @media (max-width: 768px) {\n    font-size: 17px;\n  }\n`\n\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\n  title,\n  date,\n  tags,\n}) {\n  return (\n    <PostHeadWrapper>\n      <Title>{title}</Title>\n      <Tags>{tags.join(' / ')}</Tags>\n      <div>{date}</div>\n    </PostHeadWrapper>\n  )\n}\n\nexport default PostHead\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\n\ntype PostContentProps = {\n  html: string\n}\n\nconst PostContentWrapper = styled.div`\n  padding: 100px 0;\n\n  // Markdown Style\n  line-height: 1.8;\n  font-size: 16px;\n  font-weight: 400;\n\n  // Apply Padding Attribute to All Elements\n  p {\n    padding: 3px 0;\n  }\n\n  // Adjust Heading Element Style\n  h1,\n  h2,\n  h3 {\n    font-weight: 800;\n    margin-bottom: 30px;\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: 80px;\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    margin-top: 0;\n  }\n\n  h1 {\n    font-size: 30px;\n  }\n\n  h2 {\n    font-size: 25px;\n  }\n\n  h3 {\n    font-size: 20px;\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    margin: 30px 0;\n    padding: 5px 15px;\n    border-left: 2px solid #000000;\n    font-weight: 800;\n  }\n\n  // Adjust List Element Style\n  ol,\n  ul {\n    margin-left: 20px;\n    padding: 30px 0;\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    border: 1px solid #000000;\n    margin: 100px 0;\n  }\n\n  // Adjust Link Element Style\n  a {\n    color: #4263eb;\n    text-decoration: underline;\n  }\n\n  // Adjust Code Style\n  pre[class*='language-'] {\n    margin: 30px 0;\n    padding: 15px;\n    font-size: 15px;\n\n    ::-webkit-scrollbar-thumb {\n      background: rgba(255, 255, 255, 0.5);\n      border-radius: 3px;\n    }\n  }\n\n  code[class*='language-'],\n  pre[class*='language-'] {\n    tab-size: 2;\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 50px 20px;\n    line-height: 1.6;\n    font-size: 14px;\n\n    h1 {\n      font-size: 23px;\n    }\n\n    h2 {\n      font-size: 20px;\n    }\n\n    h3 {\n      font-size: 17px;\n    }\n\n    img {\n      width: 100%;\n    }\n\n    hr {\n      margin: 50px 0;\n    }\n  }\n`\n\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\n  return <PostContentWrapper dangerouslySetInnerHTML={{ __html: html }} />\n}\n\nexport default PostContent\n","import React, { FunctionComponent } from 'react'\nimport { graphql } from 'gatsby'\nimport Main from 'components/Common/Main'\nimport styled from '@emotion/styled'\nimport PostHead from 'components/Post/PostHead'\nimport PostContent from 'components/Post/PostContent'\n\ntype PostTemplateProps = {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n      }\n    }\n    allMarkdownRemark: {\n      edges: PostListItemProps[]\n    }\n  }\n  location: {\n    href: string\n  }\n}\n\ntype PostListItemProps = {\n  node: {\n    fields: { slug: string }\n    html: string\n    frontmatter: {\n      title: string\n      date: string\n      summary: string\n      tags: string[]\n    }\n  }\n}\n\nconst ChildWrapper = styled.div`\n  max-width: 800px;\n  width: 100%;\n\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n  data: {\n    site: {\n      siteMetadata: { title: siteMetaTitle },\n    },\n    allMarkdownRemark: { edges },\n  },\n  location: { href },\n}) {\n  const {\n    node: {\n      html,\n      frontmatter: { title, summary, date, tags },\n    },\n  } = edges[0]\n\n  return (\n    <Main\n      siteMetadata={{\n        title: siteMetaTitle,\n        description: summary,\n        siteUrl: href,\n      }}\n      title={title}\n    >\n      <ChildWrapper>\n        <PostHead title={title} date={date} tags={tags} />\n        <PostContent html={html} />\n      </ChildWrapper>\n    </Main>\n  )\n}\n\nexport default PostTemplate\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY-MM-DD\")\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["PostHeadWrapper","Title","Tags","title","date","tags","___EmotionJSX","join","PostContentWrapper","html","dangerouslySetInnerHTML","__html","ChildWrapper","data","siteMetaTitle","site","siteMetadata","edges","allMarkdownRemark","href","location","node","frontmatter","summary","Main","description","siteUrl","PostHead","PostContent"],"sourceRoot":""}