{
    "componentChunkName": "component---src-templates-post-template-tsx",
    "path": "/IT/WSL2에 LEMP 환경 구성하기/",
    "result": {"data":{"site":{"siteMetadata":{"title":"js의 잡다한 블로그"}},"allMarkdownRemark":{"edges":[{"node":{"html":"<h1>WSL2에 LEMP (Ubuntu) 구성하기</h1>\n<p>** 본 게시글은 Window10 WSL2, Ubuntu 18.04, PHP7.4 기준으로 작성함</p>\n<ol>\n<li>패키지 업데이트</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> update\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> upgrade</code></pre></div>\n<ol>\n<li>Nginx 설치 및 실행</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> nginx\n<span class=\"token function\">sudo</span> <span class=\"token function\">service</span> nginx start</code></pre></div>\n<ul>\n<li><a href=\"http://localhost\" target=\"_blank\" rel=\"nofollow\">http://localhost</a> 접속하여 Nginx 페이지 확인하기</li>\n</ul>\n<ol>\n<li>MySQL 서버 설치 및 실행</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> mysql-server\n<span class=\"token function\">sudo</span> <span class=\"token function\">service</span> mysql start</code></pre></div>\n<ul>\n<li>nonexistent 에러 시 폴더 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">mkdir</span> /nonexistent</code></pre></div>\n<ol>\n<li>MySQL 패스워드 정책 및 설정</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> mysql_secure_installation</code></pre></div>\n<ul>\n<li>\n<p>설정 시 다음과 같은 질문을 한다. 취향에 맞게 설정하자.</p>\n<ul>\n<li>Set root password? [Y/n] - <strong>root 계정의 비밀번호 설정</strong></li>\n<li>Remove anonymous users? [Y/n] - <strong>익명 유저 삭제 여부</strong></li>\n<li>Disallow root login remotely? [Y/n] - <strong>root의 원격 접속 허용 여부</strong></li>\n<li>Remove test database and access to it? [Y/n] - <strong>test 데이터베이스 삭제 여부</strong></li>\n<li>Reload privilege tables now? [Y/n] - <strong>privilege 테이블 재시작 여부</strong></li>\n</ul>\n</li>\n<li>\n<p><strong>VALIDATE</strong> 설정을 물어본다면?</p>\n<ul>\n<li>develpment 환경이라면 귀찮으니 no로 입력하기</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>PHP 7.4 설치</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> add-apt-repository ppa:ondrej/php\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt</span> <span class=\"token function\">install</span> php7.4 php7.4-cli php7.4-curl php7.4-common php7.4-gd php7.4-intl php7.4-gmp php7.4-fpm php7.4-json php7.4-mbstring php7.4-mysql php7.4-opcache php7.4-readline php7.4-xml php7.4-zip\n<span class=\"token function\">sudo</span> <span class=\"token function\">service</span> php7.4-fpm start</code></pre></div>\n<ul>\n<li>PHP 모듈은 적절하게 추가 및 삭제</li>\n</ul>\n<p>** 터미널 실행 시 서버 자동으로 시작하도록 아래 3개의 명령어 입력</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vim</span> ~/.bashrc</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> /etc/init.d/nginx start\n<span class=\"token function\">sudo</span> /etc/init.d/php7.3-fpm start\n<span class=\"token function\">sudo</span> /etc/init.d/mysql start</code></pre></div>\n<p>** Nginx 서버 설정 (PHP-FPM 설정 안되어있으면 확인)</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/nginx/sites-available/default</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">server <span class=\"token punctuation\">{</span>\n        index index.php index.html index.htm index.nginx-debian.html<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">..</span>.\n\n        location ~ <span class=\"token punctuation\">\\</span><span class=\"token punctuation\">\\</span>.php$ <span class=\"token punctuation\">{</span>\n                include snippets/fastcgi-php.conf<span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\"># Make sure unix socket path matches PHP-FPM configured path above</span>\n                fastcgi_pass unix:/run/php/php7.4-fpm.sock<span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\"># Prevent ERR_INCOMPLETE_CHUNKED_ENCODING when browser hangs on response</span>\n                fastcgi_buffering off<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>** MySQL **<strong>ERROR 1698 (28000): Access denied for user ‘root’@‘localhost’</strong> 에러 발생 시 해결 방법</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> mysql -u root\n\nmysql<span class=\"token operator\">></span> USE mysql<span class=\"token punctuation\">;</span>\nmysql<span class=\"token operator\">></span> SELECT User, Host, plugin FROM mysql.user<span class=\"token punctuation\">;</span>\n\n+------------------+-----------------------+\n<span class=\"token operator\">|</span> User             <span class=\"token operator\">|</span> plugin                <span class=\"token operator\">|</span>\n+------------------+-----------------------+\n<span class=\"token operator\">|</span> root             <span class=\"token operator\">|</span> auth_socket           <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> mysql.sys        <span class=\"token operator\">|</span> mysql_native_password <span class=\"token operator\">|</span>\n<span class=\"token operator\">|</span> debian-sys-maint <span class=\"token operator\">|</span> mysql_native_password <span class=\"token operator\">|</span>\n+------------------+-----------------------+\n\nmysql<span class=\"token operator\">></span> UPDATE user SET <span class=\"token assign-left variable\">plugin</span><span class=\"token operator\">=</span><span class=\"token string\">'mysql_native_password'</span> WHERE <span class=\"token assign-left variable\">User</span><span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">;</span>\nmysql<span class=\"token operator\">></span> FLUSH PRIVILEGES<span class=\"token punctuation\">;</span>\nmysql<span class=\"token operator\">></span> <span class=\"token builtin class-name\">exit</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">service</span> mysql restart\n\nmysql -u root -p\n</code></pre></div>","id":"61127541-b13a-5f3d-9d11-67c02f21cf1d","frontmatter":{"title":"WSL2에 LEMP 환경 구성하기 (Ubuntu)","summary":"WSL2에서 LEMP 환경 구성하는 방법을 알아보자. (Ubuntu 기준)","date":"2022-04-19","tags":["WSL","Linux","PHP"]}}}]}},"pageContext":{"slug":"/IT/WSL2에 LEMP 환경 구성하기/"}},
    "staticQueryHashes": ["3495371188"]}