{"version":3,"file":"ee5043a31338338704c49e4833e478a758e2d656-11e5f6870d6a636c4308.js","mappings":"iNAWA,IAAMA,GAAa,6HAObC,GAAkB,OAAOC,EAAAA,GAAP,sBAAH,6DAKTF,EALS,kBAUfG,GAAY,yFAKZC,GAAe,gQAafC,GAAY,uGAMZC,GAAW,wIA6BjB,EArBmD,YAM/C,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,KACAC,EAGC,EAHDA,KACAC,EAEC,EAFDA,QACAC,EACC,EADDA,KAEA,OACEC,EAAAA,EAAAA,IAACX,EAAD,CAAiBY,GAAIF,IACnBC,EAAAA,EAAAA,IAACZ,EAAD,KAAgBO,IAChBK,EAAAA,EAAAA,IAACR,EAAD,KAAkBM,IAClBE,EAAAA,EAAAA,IAACP,EAAD,KACGI,EAAKK,KAAI,SAAAC,GAAG,OACXH,EAAAA,EAAAA,IAACN,EAAD,CAAaU,IAAKD,GAAlB,IAAyBA,QAG7BH,EAAAA,EAAAA,IAACT,EAAD,KAAeK,K,UCtDrB,IAAMS,GAAe,iJAiCrB,EAzB+C,YAG3C,IAFFC,EAEC,EAFDA,YACAC,EACC,EADDA,MAEA,GAAmCC,EAAAA,EAAAA,GAAkBF,EAAaC,GAA1DE,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,SAEtB,OACEV,EAAAA,EAAAA,IAACK,EAAD,CAAiBM,IAAKF,GACnBC,EAASR,KACR,WAOEU,GAPF,QAEIC,KACYC,EAHhB,EAGMC,OAAUD,KACVE,EAJN,EAIMA,YAJN,OASEhB,EAAAA,EAAAA,IAACiB,GAAD,QAAUb,IAAKQ,GAAOI,EAAtB,CAAmCjB,KAAMe","sources":["webpack://gatsby-starter-default/./src/components/Post/PostItem.tsx","webpack://gatsby-starter-default/./src/components/Post/PostList.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\ntype PostItemProps = {\n  title: string\n  date: string\n  tags: string[]\n  summary?: string\n  link: string\n}\nconst PostItemTitle = styled.div`\n  font-size: 24px;\n  font-weight: 600;\n  color: #000;\n  word-break: break-all;\n`\n\nconst PostItemWrapper = styled(Link)`\n  cursor: pointer;\n  color: inherit;\n  text-decoration: none;\n\n  &:hover ${PostItemTitle} {\n    opacity: 0.7;\n  }\n`\n\nconst PostItemDate = styled.div`\n  font-size: 14px;\n  opacity: 0.6;\n`\n\nconst PostItemSummary = styled.div`\n  display: -webkit-box;\n  overflow: hidden;\n  margin-top: auto;\n  text-overflow: ellipsis;\n  white-space: normal;\n  overflow-wrap: break-word;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  font-size: 18px;\n  opacity: 0.8;\n`\n\nconst PostItemTags = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -5px;\n`\n\nconst PostItemTag = styled.div`\n  height: 25px;\n  line-height: 1.7;\n  border-radius: 20px;\n  color: #6610f2;\n  margin: 0 5px;\n`\n\nconst PostItem: FunctionComponent<PostItemProps> = function ({\n  title,\n  date,\n  tags,\n  summary,\n  link,\n}) {\n  return (\n    <PostItemWrapper to={link}>\n      <PostItemTitle>{title}</PostItemTitle>\n      <PostItemSummary>{summary}</PostItemSummary>\n      <PostItemTags>\n        {tags.map(tag => (\n          <PostItemTag key={tag}>#{tag}</PostItemTag>\n        ))}\n      </PostItemTags>\n      <PostItemDate>{date}</PostItemDate>\n    </PostItemWrapper>\n  )\n}\n\nexport default PostItem\n","import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport PostItem from './PostItem'\nimport useInfiniteScroll from 'hooks/useInfiniteScroll'\n\ntype PostProps = {\n  selectedTag: string\n  posts: PostItemProps[]\n}\n\ntype PostItemProps = {\n  node: {\n    fields: { slug: string }\n    frontmatter: {\n      title: string\n      date: string\n      tags: string[]\n      summary?: string\n    }\n  }\n}\n\nconst PostListWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  row-gap: 30px;\n  padding: 15px 0 50px;\n`\n\nconst PostList: FunctionComponent<PostProps> = function ({\n  selectedTag,\n  posts,\n}) {\n  const { containerRef, postList } = useInfiniteScroll(selectedTag, posts)\n\n  return (\n    <PostListWrapper ref={containerRef}>\n      {postList.map(\n        (\n          {\n            node: {\n              fields: { slug },\n              frontmatter,\n            },\n          }: PostItemProps,\n          i: number,\n        ) => (\n          <PostItem key={i} {...frontmatter} link={slug} />\n        ),\n      )}\n    </PostListWrapper>\n  )\n}\n\nexport default PostList\n"],"names":["PostItemTitle","PostItemWrapper","Link","PostItemDate","PostItemSummary","PostItemTags","PostItemTag","title","date","tags","summary","link","___EmotionJSX","to","map","tag","key","PostListWrapper","selectedTag","posts","useInfiniteScroll","containerRef","postList","ref","i","node","slug","fields","frontmatter","PostItem"],"sourceRoot":""}